{"version":3,"sources":["media-session.js","actions/index.js","components/AddSongs.jsx","components/Song.jsx","components/SongList.jsx","components/NowPlaying.jsx","views/MainView.jsx","components/Header.jsx","components/PlayingCtrl.jsx","views/PlayingView.jsx","utils/keyboardEvents.jsx","App.jsx","registerServiceWorker.js","reducers/songs.js","reducers/playState.js","reducers/common.js","reducers/index.js","reducers/page.js","store/localStore.js","index.js"],"names":["store","mediaSessionEnabled","navigator","mediaSession","setActionHandler","state","getState","prevId","playState","songId","songs","length","dispatch","playSong","nextId","togglePlaying","media_session","s","song","id","console","log","metadata","window","MediaMetadata","title","name","artist","album","artwork","src","sizes","type","addNewSong","PLAYLIST_PAGE","SETTINGS_PAGE","NOW_PLAYING_PAGE","addSongs","AddSongs","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addSong","bind","assertThisInitialized","triggerInput","fileInput","click","e","add","currentTarget","files","_this2","react_default","a","createElement","FloatingActionButton_default","onClick","backgroundColor","style","position","bottom","right","zIndex","color","fontSize","fontWeight","htmlFor","className","display","ref","input","onChange","multiple","accept","React","Component","connect","Song","handleClick","_this$props","play","index","removeSong","_this$props2","remove","menuOptions","MenuItem_default","primaryText","openSnackbar","List","leftAvatar","Avatar_default","icon","music_note_default","rightIconButton","index_es","iconButtonElement","IconButton_default","more_vert_default","anchorOrigin","horizontal","vertical","targetOrigin","SongList","_ref","marginBottom","map","ind","key","concat","Math","random","toFixed","size","components_Song","Divider_default","lastModified","textAlign","NowPlaying","playingSong","currentTime","openNowPlaying","button","playing","Paper_default","zDepth","rounded","LinearProgress_default","mode","min","max","value","padding","width","role","tabIndex","FontIcon_default","MainView","handleDragOver","event","preventDefault","stopPropagation","dataTransfer","dropEffect","toggle","height","onDragOver","onDrop","File","FileReader","FileList","Blob","toConsumableArray","filter","endsWith","components_SongList","components_AddSongs","components_NowPlaying","Header","openPage","page","setState","prevState","open","AppBar_default","iconElementLeft","IconButton_IconButton_default","menu_default","Drawer_default","docked","showMenuIconButton","PlayingCtrl","changeRepeat","repeat","repeatType","installEvent","setTimeout","playNext","playPrevious","timeDrag","repeatButton","Slider_default","_","newVal","defaultValue","common","PlayingView","justifyContent","alignItems","marginTop","components_PlayingCtrl","ACTION_KEYS","muiTheme","getMuiTheme","palette","primary1Color","indigo400","App","URL","revokeObjectURL","songEnded","_this$props3","updateTime","audioPlayer","duration","fileSrc","createObjectURL","document","replace","time","handleActionClick","handleRequestClose","snackBarOpen","snackMsg","hideSnackAction","hasRejectedInstall","addToHomeScreenUIVisible","_this$props4","releaseKeyboardEvents","handlers","handler","upperCaseKey","code","toUpperCase","indexOf","addEventListener","removeEventListener","keyboardEvents","nextProps","_this3","_this$state","pause","prompt","userChoice","then","choiceResult","outcome","_this4","_this$state2","_this$props5","MuiThemeProvider_default","components_Header","hidden","controls","onEnded","onTimeUpdate","audio","assign","kind","views_PlayingView","msg","views_MainView","Snackbar_default","action","autoHideDuration","onActionClick","onRequestClose","message","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initalState","initialState","sidebarOpen","reducers","combineReducers","arguments","undefined","objectSpread","LocalForage","localState","createStore","mediaNotification","subscribe","ReactDOM","render","es","src_App","getElementById","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.33e3683b.chunk.js","sourcesContent":["import { togglePlaying, playSong } from './actions/index';\n\nlet store;\nconst mediaSessionEnabled = ('mediaSession' in navigator);\nconst addNewSong = (id) => {\n  const state = store.getState();\n  console.log('New song', state.songs[id]);\n  navigator.mediaSession.metadata = new window.MediaMetadata({\n    title: state.songs[id].name,\n    artist: 'Unknown',\n    album: 'Unknown Albumn',\n    artwork: [{\n      src: 'icons/mipmap-xhdpi/ic_launcher.png',\n      sizes: '96x96',\n      type: 'image/png',\n    }, {\n      src: 'icons/mipmap-xxhdpi/ic_launcher.png',\n      sizes: '144x144',\n      type: 'image/png',\n    }, {\n      src: 'icons/mipmap-xxxhdpi/ic_launcher.png',\n      sizes: '192x192',\n      type: 'image/png',\n    }, {\n      src: 'icons/playstore/icon.png',\n      sizes: '512x512',\n      type: 'image/png',\n    }],\n  });\n};\n\nconst addActionListeners = () => {\n  navigator.mediaSession.setActionHandler('previoustrack', () => {\n    if (store) {\n      const state = store.getState();\n      const prevId = state.playState.songId === 0 ? state.songs.length - 1 : state.playState.songId - 1;\n      store.dispatch(playSong(prevId));\n    }\n  });\n\n  navigator.mediaSession.setActionHandler('nexttrack', () => {\n    if (store) {\n      const state = store.getState();\n      const nextId = (state.playState.songId + 1) % state.songs.length;\n      store.dispatch(playSong(nextId));\n    }\n  });\n\n  navigator.mediaSession.setActionHandler('play', () => {\n    if (store) store.dispatch(togglePlaying());\n  });\n\n  navigator.mediaSession.setActionHandler('pause', () => {\n    if (store) store.dispatch(togglePlaying());\n  });\n};\nif (mediaSessionEnabled) addActionListeners();\n\nexport default {\n  setStore(s) {\n    store = s;\n  },\n  playSong(song) {\n    if (mediaSessionEnabled) {\n      addNewSong(song);\n    }\n  },\n};\n","import mediaSession from '../media-session';\n\nexport const ADD_SONGS = 'ADD_SONGS';\nexport const REMOVE_SONGS = 'REMOVE_SONGS';\nexport const TOGGLE_PLAYING = 'TOGGLE_PLAYING';\nexport const FILTER_SONGS = 'FILTER_SONGS';\nexport const PLAY_SONG = 'PLAY_SONG';\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const PLAYLIST_PAGE = 'PLAYLIST_PAGE';\nexport const SHUFFLE = 'SHUFFLE';\nexport const REPEAT = 'REPEAT';\nexport const HOME_PAGE = 'HOME_PAGE';\nexport const SETTINGS_PAGE = 'SETTINGS_PAGE';\nexport const NOW_PLAYING_PAGE = 'NOW_PLAYING_PAGE';\n\nexport const addSongs = songs => ({\n  type: ADD_SONGS,\n  songs,\n});\n\nexport const removeSong = id => ({\n  type: REMOVE_SONGS,\n  id,\n});\n\nexport const playSong = (id) => {\n  mediaSession.playSong(id);\n  return {\n    type: PLAY_SONG,\n    id,\n  };\n};\n\nexport const repeatType = id => ({\n  type: REPEAT,\n  id,\n});\n\nexport const togglePlaying = () => ({\n  type: TOGGLE_PLAYING,\n});\n\nexport const toggleSidebar = () => ({\n  type: TOGGLE_SIDEBAR,\n});\n\nexport const filterSong = filter => ({\n  type: FILTER_SONGS,\n  filter,\n});\n\nexport const homePage = () => ({\n  type: HOME_PAGE,\n});\n\nexport const nowPlayingPage = () => ({\n  type: NOW_PLAYING_PAGE,\n});\n\nexport const settingsPage = () => ({\n  type: SETTINGS_PAGE,\n});\n","import React from 'react';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSongs } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  addSongs: songs => dispatch(addSongs(songs)),\n});\n\n\nclass AddSongs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addSong = this.addSong.bind(this);\n    this.triggerInput = this.triggerInput.bind(this);\n  }\n\n  triggerInput() {\n    this.fileInput.click();\n  }\n\n  addSong(e) {\n    const { addSongs: add } = this.props;\n    add(e.currentTarget.files);\n  }\n\n  render() {\n    return (\n      <FloatingActionButton\n        onClick={this.triggerInput}\n        backgroundColor=\"#7050FA\"\n        style={{\n          position: 'fixed', bottom: '120px', right: '25px', zIndex: 3000,\n        }}\n      >\n        <span style={{ color: 'white', fontSize: '30px', fontWeight: 200 }}>+</span>\n        <label htmlFor=\"song-input\" className=\"sr-only\">\n          Pick a song\n          <input\n            style={{ display: 'none' }}\n            id=\"song-input\"\n            ref={(input) => { this.fileInput = input; }}\n            onChange={this.addSong}\n            type=\"file\"\n            multiple\n            accept=\"audio/mp3\"\n          />\n        </label>\n      </FloatingActionButton>\n    );\n  }\n}\n\nAddSongs.propTypes = {\n  addSongs: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(AddSongs);\n","import React, { Component } from 'react';\nimport { ListItem } from 'material-ui/List';\nimport { connect } from 'react-redux';\nimport ImageMusicNote from 'material-ui/svg-icons/image/music-note';\nimport Avatar from 'material-ui/Avatar';\nimport PropTypes from 'prop-types';\nimport MenuItem from 'material-ui/MenuItem';\nimport IconButton from 'material-ui/IconButton';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport { IconMenu } from 'material-ui';\nimport { removeSong, playSong } from '../actions';\n\nconst mapStateToDispatch = dispatch => ({\n  removeSong: id => dispatch(removeSong(id)),\n  playSong: id => dispatch(playSong(id)),\n});\n\n\nclass Song extends Component {\n  handleClick = () => {\n    const { playSong: play, index } = this.props;\n    play(index);\n  }\n\n  removeSong = () => {\n    const { removeSong: remove, index } = this.props;\n    remove(index);\n  }\n\n  menuOptions = () => (\n    <div>\n      <MenuItem onClick={this.removeSong} primaryText=\"RemoveSong\" />\n      {/* eslint-disable-next-line */}\n      <MenuItem onClick={this.props.openSnackbar} primaryText=\"Add to Playlist\" />\n    </div>\n  )\n\n  render() {\n    const { song } = this.props;\n    return (\n      <ListItem\n        className=\"song\"\n        onClick={this.handleClick}\n        leftAvatar={<Avatar icon={<ImageMusicNote />} />}\n        primaryText={<div className=\"song-title\">{ song.name }</div>}\n        rightIconButton={(\n          <IconMenu\n            iconButtonElement={<IconButton><MoreVertIcon /></IconButton>}\n            anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n            targetOrigin={{ horizontal: 'right', vertical: 'top' }}\n          >\n            { this.menuOptions() }\n          </IconMenu>\n        )}\n      />\n    );\n  }\n}\n\nSong.propTypes = {\n  removeSong: PropTypes.func.isRequired,\n  playSong: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  song: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(null, mapStateToDispatch)(Song);\n","import React from 'react';\nimport Divider from 'material-ui/Divider';\nimport { List } from 'material-ui/List';\nimport PropTypes from 'prop-types';\n\nimport Song from './Song';\n\nconst SongList = ({ songs }) => {\n  if (!songs[0]) {\n    return (\n      <h4 style={{ fontWeight: 300, textAlign: 'center' }}>No Songs Present. Please Add Songs</h4>\n    );\n  }\n  return (\n    <div style={{ marginBottom: '100px' }}>\n      <List>\n        {\n          songs.map((song, ind) => (\n            <div key={`song-${(Math.random() * 10000000).toFixed(0)}-${song.size}`}>\n              <Song song={song} index={ind} />\n              <Divider key={song.lastModified} />\n            </div>\n          ))\n        }\n      </List>\n    </div>\n  );\n};\n\nSongList.propTypes = {\n  songs: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n};\n\nexport default SongList;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Avatar from 'material-ui/Avatar';\nimport Paper from 'material-ui/Paper';\nimport IconButton from 'material-ui/IconButton';\nimport FontIcon from 'material-ui/FontIcon';\nimport LinearProgress from 'material-ui/LinearProgress';\nimport ImageMusicNote from 'material-ui/svg-icons/image/music-note';\n\n\nconst NowPlaying = (props) => {\n  const {\n    playState, playingSong, currentTime, togglePlaying, openNowPlaying,\n  } = props;\n  const button = playState.playing ? 'pause_circle_filled' : 'play_circle_filled';\n  return (\n    <Paper className=\"small-now-playing\" zDepth={5} rounded={false}>\n      <LinearProgress className=\"song-progress\" mode=\"determinate\" min={0} max={100} value={currentTime} />\n      <div style={{ display: 'flex', padding: '20px 10px' }} className=\"now-playing-container\">\n        {/* eslint-disable-next-line */}\n        <div style={{ width: '90%' }} role=\"button\" tabIndex=\"0\" onClick={playingSong && openNowPlaying}>\n          <div style={{ width: '15%', display: 'inline-block' }}>\n            <Avatar icon={<ImageMusicNote />} />\n          </div>\n          <div style={{ display: 'inline-block', width: '77%' }} className=\"song-title\">\n            {playingSong ? playingSong.name : '[No song]'}\n          </div>\n        </div>\n        <div style={{ width: '50px' }} className=\"play-pause-button\">\n          <IconButton onClick={togglePlaying}>\n            <FontIcon style={{ fontSize: '60px' }} className=\"material-icons\">{button}</FontIcon>\n          </IconButton>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nNowPlaying.propTypes = {\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  playingSong: propTypes.objectOf(propTypes.any).isRequired,\n  currentTime: propTypes.number.isRequired,\n  togglePlaying: propTypes.func.isRequired,\n  openNowPlaying: propTypes.func.isRequired,\n};\n\nexport default NowPlaying;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport AddSongs from '../components/AddSongs';\nimport SongList from '../components/SongList';\nimport NowPlaying from '../components/NowPlaying';\nimport { togglePlaying, nowPlayingPage, addSongs } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  openNowPlaying: () => dispatch(nowPlayingPage()),\n  addSongs: songs => dispatch(addSongs(songs)),\n});\n\nclass MainView extends Component {\n  handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    // eslint-disable-next-line\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  render() {\n    const {\n      songs, playState, openNowPlaying, openSnackbar, currentTime, addSongs: add, toggle,\n    } = this.props;\n    return (\n      <div\n        style={{ height: '100%' }}\n        onDragOver={this.handleDragOver}\n        onDrop={(event) => {\n          this.handleDragOver(event);\n          if (window.File && window.FileReader && window.FileList && window.Blob) {\n            const files = [...event.dataTransfer.files].filter(({ name }) => name && name.endsWith('.mp3'));\n            if (files.length > 0) add(files);\n          } else {\n            openSnackbar('The File APIs are not fully supported in this browser.');\n          }\n          return false;\n        }}\n      >\n        <SongList songs={songs} />\n        <AddSongs />\n        <NowPlaying\n          togglePlaying={toggle}\n          playState={playState}\n          playingSong={songs[playState.songId]}\n          openNowPlaying={openNowPlaying}\n          currentTime={currentTime}\n        />\n      </div>\n    );\n  }\n}\n\nMainView.propTypes = {\n  openNowPlaying: propTypes.func.isRequired,\n  toggle: propTypes.func.isRequired,\n  addSongs: propTypes.func.isRequired,\n  songs: propTypes.arrayOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  currentTime: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(MainView);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport AppBar from 'material-ui/AppBar';\nimport Drawer from 'material-ui/Drawer';\nimport MenuItem from 'material-ui/MenuItem';\nimport IconButton from 'material-ui/IconButton/IconButton';\nimport NavMenuIcon from 'material-ui/svg-icons/navigation/menu';\n\nimport {\n  HOME_PAGE, SETTINGS_PAGE, NOW_PLAYING_PAGE, PLAYLIST_PAGE,\n} from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  openPage: type => dispatch({ type }),\n});\n\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  openPage = page => () => {\n    const { openPage, playState, openSnackbar } = this.props;\n    this.setState(prevState => ({ open: !prevState.open }));\n    // Don't Open now playing page when there is no song\n    if (page === PLAYLIST_PAGE || page === SETTINGS_PAGE) {\n      openSnackbar();\n      return;\n    }\n    if (!playState && page === NOW_PLAYING_PAGE) return;\n    if (page) openPage(page);\n  }\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div>\n        <AppBar\n          iconElementLeft={<IconButton onClick={this.openPage()}><NavMenuIcon /></IconButton>}\n          style={{ backgroundColor: '#7050FA', position: 'fixed' }}\n          title=\"Music Player\"\n        />\n        <div className=\"header-padding\" style={{ height: '60px' }} />\n        <Drawer docked={false} open={open}>\n          <AppBar title=\"Menu\" showMenuIconButton={false} />\n          <MenuItem onClick={this.openPage(HOME_PAGE)}>Home</MenuItem>\n          <MenuItem onClick={this.openPage(NOW_PLAYING_PAGE)}>NowPlaying</MenuItem>\n          <MenuItem onClick={this.openPage(PLAYLIST_PAGE)}>Playlists</MenuItem>\n          <MenuItem onClick={this.openPage(SETTINGS_PAGE)}>Settings</MenuItem>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  openPage: propTypes.func.isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  openSnackbar: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport Paper from 'material-ui/Paper';\nimport IconButton from 'material-ui/IconButton';\nimport FontIcon from 'material-ui/FontIcon';\nimport Slider from 'material-ui/Slider';\nimport { repeatType, togglePlaying } from '../actions';\n\nconst mapStateToProps = state => ({\n  playState: state.playState,\n  repeatType: state.common.repeat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeRepeat: id => dispatch(repeatType(id)),\n  togglePlaying: () => dispatch(togglePlaying()),\n});\n\nclass PlayingCtrl extends Component {\n  componentDidMount() {\n    const { installEvent } = this.props;\n    setTimeout(() => typeof installEvent === 'function' && installEvent(), 3000);\n  }\n\n  changeRepeat = () => {\n    const { repeatType: repeat, changeRepeat } = this.props;\n    const nextRepeat = repeat === 2 ? 0 : repeat + 1;\n    changeRepeat(nextRepeat);\n  }\n\n  render() {\n    const {\n      playState, song, playNext, playPrevious, currentTime, repeatType: repeat,\n      togglePlaying: toggle, timeDrag, openSnackbar,\n    } = this.props;\n    const button = playState.playing ? 'pause_circle_filled' : 'play_circle_filled';\n    const repeatButton = repeat === 0\n      ? (<FontIcon onClick={this.changeRepeat} style={{ color: 'rgba(0, 0, 0, 0.3)' }} className=\"material-icons\">repeat</FontIcon>)\n      : (<IconButton><FontIcon onClick={this.changeRepeat} className=\"material-icons\">{ repeat === 1 ? 'repeat_one' : 'repeat' }</FontIcon></IconButton>);\n\n    return (\n      <Paper className=\"play-control\" zDepth={0} rounded={false}>\n        <h3 className=\"song-title\">{ song.name }</h3>\n        <Slider style={{ height: '2px' }} className=\"song-progress\" value={currentTime} onChange={(_, newVal) => timeDrag(newVal)} max={100} min={0} defaultValue={2} />\n        <div className=\"now-playing-container\">\n          <div style={{ width: '35%', textAlign: 'center' }} className=\"side-icons\">\n            { repeatButton }\n            <IconButton><FontIcon onClick={playPrevious} className=\"material-icons\">skip_previous</FontIcon></IconButton>\n          </div>\n          <div style={{ width: '30%', textAlign: 'center' }} className=\"play-pause-button\">\n            <IconButton><FontIcon onClick={toggle} style={{ fontSize: '50px', width: '50px' }} className=\"material-icons\">{ button }</FontIcon></IconButton>\n          </div>\n          <div style={{ width: '35%', textAlign: 'center' }} className=\"side-icons\">\n            <IconButton><FontIcon onClick={playNext} className=\"material-icons\">skip_next</FontIcon></IconButton>\n            <FontIcon\n              className=\"material-icons\"\n              style={{ color: 'rgba(0, 0, 0, 0.3)' }}\n              onClick={() => openSnackbar('Shuffle doesn\\'t work yet, You can make a PR 😊')}\n            >\n              shuffle\n            </FontIcon>\n          </div>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPlayingCtrl.propTypes = {\n  timeDrag: propTypes.func.isRequired,\n  playNext: propTypes.func.isRequired,\n  playPrevious: propTypes.func.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  repeatType: propTypes.number.isRequired,\n  changeRepeat: propTypes.func.isRequired,\n  currentTime: propTypes.number.isRequired,\n  togglePlaying: propTypes.func.isRequired,\n  song: propTypes.objectOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  installEvent: propTypes.oneOf([propTypes.func.isRequired, propTypes.any]).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayingCtrl);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport FontIcon from 'material-ui/FontIcon';\nimport PlayingCtrl from '../components/PlayingCtrl';\n\nconst PlayingView = ({\n  playNext,\n  timeDrag,\n  repeatType,\n  currentTime,\n  playingSong,\n  openSnackbar,\n  playPrevious,\n  installEvent,\n}) => (\n  <div>\n    <div style={{\n      display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '30px',\n    }}\n    >\n      <FontIcon className=\"material-icons\" style={{ width: '300px', fontSize: '300px', color: 'rgba(0,0,0,0.3)' }}>album</FontIcon>\n    </div>\n    <PlayingCtrl\n      song={playingSong}\n      playNext={playNext}\n      timeDrag={timeDrag}\n      repeatType={repeatType}\n      installEvent={installEvent}\n      currentTime={currentTime}\n      openSnackbar={openSnackbar}\n      playPrevious={playPrevious}\n    />\n  </div>\n);\n\nPlayingView.propTypes = {\n  timeDrag: propTypes.func.isRequired,\n  playNext: propTypes.func.isRequired,\n  repeatType: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  playPrevious: propTypes.func.isRequired,\n  installEvent: propTypes.oneOf([propTypes.func.isRequired, propTypes.any]).isRequired,\n  currentTime: propTypes.number.isRequired,\n  playingSong: propTypes.objectOf(propTypes.any).isRequired,\n};\n\nexport default PlayingView;\n","const ACTION_KEYS = [\n  'ARROWLEFT',\n  'ARROWRIGHT',\n  'SPACE',\n];\n\nexport default function keyboardEvents(handlers) {\n  const handler = (e) => {\n    const upperCaseKey = e.code.toUpperCase();\n\n    if (ACTION_KEYS.indexOf(upperCaseKey) === -1) {\n      return;\n    }\n\n    const {\n      playNext,\n      playPrevious,\n      togglePlaying,\n    } = handlers;\n\n    switch (upperCaseKey) {\n      case 'ARROWLEFT':\n        playPrevious();\n        break;\n      case 'ARROWRIGHT':\n        playNext();\n        break;\n      case 'SPACE':\n        togglePlaying();\n        break;\n      default:\n        break;\n    }\n  };\n  window.addEventListener('keydown', handler);\n  return () => window.removeEventListener('keydown', handler);\n}\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { indigo400 } from 'material-ui/styles/colors';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\nimport { NOW_PLAYING_PAGE, togglePlaying, playSong } from './actions';\n\nimport MainView from './views/MainView';\nimport Header from './components/Header';\nimport PlayingView from './views/PlayingView';\nimport keyboardEvents from './utils/keyboardEvents';\n\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: indigo400,\n  },\n});\n\nconst mapStateToProps = state => ({\n  page: state.page,\n  songs: state.songs,\n  playState: state.playState,\n  repeatType: state.common.repeat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  playSong: id => dispatch(playSong(id)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0,\n      snackBarOpen: false,\n      hasRejectedInstall: false,\n      snackMsg: '',\n      hideSnackAction: false,\n      installEvent: null,\n      addToHomeScreenUIVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    const { songs, toggle } = this.props;\n    if (songs[0]) {\n      this.audioPlayer.src = URL.createObjectURL(songs[0]);\n    }\n    this.releaseKeyboardEvents = keyboardEvents({\n      playNext: this.playNext,\n      playPrevious: this.playPrevious,\n      togglePlaying: toggle,\n    });\n    window.addEventListener('beforeinstallprompt', (e) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n      console.log('before install fired', e);\n      // Stash the event so it can be triggered later.\n      this.setState({ installEvent: e, addToHomeScreenUIVisible: true });\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { playState } = this.props;\n    const { installEvent, hasRejectedInstall } = this.state;\n    if (nextProps.playState !== playState) {\n      if (!nextProps.playState.playing) {\n        // PAUSE\n        this.audioPlayer.pause();\n      } else if (nextProps.playState.songId === 0) {\n        this.playSong(0);\n      } else if (nextProps.playState.songId === playState.songId) {\n        // RESUME\n        this.audioPlayer.play();\n        // Start playing\n      } else {\n        this.playSong(nextProps.playState.songId);\n      }\n      if (installEvent && !hasRejectedInstall) {\n        installEvent.prompt();\n        installEvent.userChoice.then((choiceResult) => {\n          if (choiceResult.outcome === 'accepted') {\n            console.log('User accepted the A2HS prompt');\n            this.setState({\n              snackBarOpen: true, hideSnackAction: true, snackMsg: '🤗 Yay! You\\'ve installed the app',\n            });\n          } else {\n            console.log('User dismissed the A2HS prompt');\n            this.setState({\n              snackBarOpen: true,\n              hideSnackAction: true,\n              hasRejectedInstall: true,\n              snackMsg: '😥 Reload the page whenever you change your mind',\n            });\n          }\n          this.snackBarOpen({ installEvent: null });\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.releaseKeyboardEvents();\n  }\n\n  playNext = () => {\n    const { songs, playState, playSong: play } = this.props;\n    URL.revokeObjectURL(songs[playState.songId]);\n    const nextSongId = (playState.songId + 1) % songs.length;\n    play(nextSongId);\n  }\n\n  songEnded = () => {\n    const {\n      songs, playState, repeatType, playSong: play,\n    } = this.props;\n    // No repeat\n    if (repeatType === 0) {\n      URL.revokeObjectURL(songs[playState.songId]);\n      if (playState.songId < songs.length) play(playState.songId + 1);\n    } else if (repeatType === 1) {\n      // repeat one\n      play(playState.songId);\n    // repeat all\n    } else this.playNext();\n  }\n\n  playPrevious = () => {\n    const { songs, playState, playSong: play } = this.props;\n    URL.revokeObjectURL(songs[playState.songId]);\n    const prevSongId = playState.songId === 0 ? songs.length - 1 : playState.songId - 1;\n    play(prevSongId);\n  }\n\n  updateTime = () => {\n    const currentTime = 100 * this.audioPlayer.currentTime / this.audioPlayer.duration || 0;\n    this.setState({ currentTime });\n  }\n\n  playSong = (id) => {\n    const { songs } = this.props;\n    if (songs[id]) {\n      const fileSrc = URL.createObjectURL(songs[id]);\n      this.audioPlayer.src = fileSrc;\n      this.audioPlayer.play();\n      window.document.title = songs[id].name.replace('.mp3', '');\n    }\n  }\n\n  timeDrag = (time) => {\n    this.audioPlayer.currentTime = this.audioPlayer.duration * (time / 100);\n  }\n\n  handleActionClick = () => {\n    window.open('https://github.com/ashinzekene/react-music-player', '_blank');\n  }\n\n  handleRequestClose = () => {\n    this.setState({ snackBarOpen: false, snackMsg: '', hideSnackAction: false });\n  }\n\n  render() {\n    const {\n      currentTime, snackBarOpen, snackMsg, installEvent, addToHomeScreenUIVisible, hideSnackAction,\n    } = this.state;\n    const {\n      songs, playState, openNowPlaying, toggle, repeatType, page,\n    } = this.props;\n    return (\n      <MuiThemeProvider muiTheme={muiTheme}>\n        <div>\n          <Header\n            playState={playState}\n            addToHomeScreenUIVisible={addToHomeScreenUIVisible}\n            playingSong={songs[playState.songId]}\n            openSnackbar={() => this.setState({ snackBarOpen: true })}\n          />\n          <audio\n            hidden\n            controls\n            onEnded={this.songEnded}\n            onTimeUpdate={this.updateTime}\n            ref={(audio) => { this.audioPlayer = audio; }}\n          >\n            <track kind=\"captions\" {...{}} />\n          </audio>\n          {\n            page === NOW_PLAYING_PAGE ? (\n              <PlayingView\n                repeatType={repeatType}\n                playNext={this.playNext}\n                timeDrag={this.timeDrag}\n                installEvent={installEvent}\n                currentTime={currentTime}\n                playPrevious={this.playPrevious}\n                playingSong={songs[playState.songId]}\n                openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })}\n              />) : (\n                <MainView\n                  songs={songs}\n                  toggle={toggle}\n                  playState={playState}\n                  currentTime={currentTime}\n                  openNowPlaying={openNowPlaying}\n                  openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })}\n                />)\n          }\n          <Snackbar\n            open={snackBarOpen}\n            action={!hideSnackAction && 'make a PR 😊'}\n            autoHideDuration={4000}\n            onActionClick={this.handleActionClick}\n            onRequestClose={this.handleRequestClose}\n            message={snackMsg || 'Not Implemented yet, You can make a PR 😊'}\n          />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  page: PropTypes.string.isRequired,\n  songs: PropTypes.arrayOf(PropTypes.any).isRequired,\n  playState: PropTypes.shape({\n    playing: PropTypes.bool.isRequired,\n    songId: PropTypes.number.isRequired,\n  }).isRequired,\n  repeatType: PropTypes.oneOf([0, 1, 2]).isRequired,\n  toggle: PropTypes.func.isRequired,\n  playSong: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_SONGS, REMOVE_SONGS } from '../actions';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case ADD_SONGS: {\n      return [...state, ...action.songs];\n    }\n    case REMOVE_SONGS: {\n      return state.filter((song, index) => index !== action.id);\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { PLAY_SONG, TOGGLE_PLAYING } from '../actions/index';\n\nconst initalState = {\n  playing: false,\n  songId: 0,\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case PLAY_SONG: {\n      return { playing: true, songId: action.id };\n    }\n    case TOGGLE_PLAYING: {\n      return Object.assign({}, state, { playing: !state.playing });\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { TOGGLE_SIDEBAR, REPEAT } from '../actions/index';\n\nconst initialState = {\n  sidebarOpen: false,\n  repeat: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR: {\n      return { ...state, sidebarOpen: !state.sidebarOpen };\n    }\n    case REPEAT: {\n      return { ...state, repeat: action.id };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport songs from './songs';\nimport playState from './playState';\nimport common from './common';\nimport page from './page';\n\nconst reducers = combineReducers({\n  songs,\n  common,\n  playState,\n  page,\n});\n\nexport default reducers;\n","import {\n  HOME_PAGE, NOW_PLAYING_PAGE, SETTINGS_PAGE, PLAYLIST_PAGE,\n} from '../actions/index';\n\nexport default (state = HOME_PAGE, action) => {\n  switch (action.type) {\n    case HOME_PAGE: {\n      return HOME_PAGE;\n    }\n    case PLAYLIST_PAGE: {\n      return PLAYLIST_PAGE;\n    }\n    case NOW_PLAYING_PAGE: {\n      return NOW_PLAYING_PAGE;\n    }\n    case SETTINGS_PAGE: {\n      return SETTINGS_PAGE;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import * as LocalForage from 'localforage';\n\nexport const saveState = (state) => {\n  LocalForage.setItem('state', state);\n};\n\nexport const getState = () => LocalForage.getItem('state').then((state) => {\n  if (state === null) {\n    return undefined;\n  }\n  return state;\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducers from './reducers';\nimport loggerMiddleware from './middleware';\nimport { saveState, getState } from './store/localStore';\nimport mediaNotification from './media-session';\n// import createStoreObserver from  'redux-store-observer'\n\ngetState().then((localState) => {\n  let store;\n  if (process.env.NODE_ENV === 'development') {\n    store = createStore(reducers, localState, applyMiddleware(loggerMiddleware));\n  } else {\n    store = createStore(reducers, localState);\n  }\n  mediaNotification.setStore(store);\n  store.subscribe(() => {\n    saveState({\n      songs: store.getState().songs,\n    });\n  });\n  ReactDOM.render(\n    // eslint-disable-next-line\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root'),\n  );\n});\nregisterServiceWorker();\n"],"sourceRoot":""}